var ws = require("../lib/node-websocket-server/lib/ws"),
    globals = require("../client/globals"),
    server = ws.createServer(),
    ConnectionTable = {};

console.log("Websocket server started.");

function keys(obj){
    var ret = [];
    for (var k in obj){
        if (obj.hasOwnProperty(k))
            ret.push(k);
    }
    return ret;
}

server.on("connection", function(conn){
    // save state of each player so that it can be replayed
    if (!ConnectionTable[conn.id]){
        console.log("First connection of player " + conn.id);
        // first connection of a player
        ConnectionTable[conn.id] = [];
        conn.send(JSON.stringify({ action: "ready" }));      // send it to me as well
        conn.broadcast(JSON.stringify({ action: "ready" }));      // send it to me as well
    }

    if (keys(ConnectionTable).length === globals.NumberOfPlayers){
        conn.broadcast(JSON.stringify(message)); // broadcast to others
        conn.send(JSON.stringify(message));      // send it to me as well
    }
    // else, players are not ready yet


    conn.on("message", function(message){
        message = JSON.parse(message);
        message.id = conn.id;
        console.log(message);

        ConnectionTable[conn.id].push(message);
        // prevent of overflow
        if (ConnectionTable[conn.id].length > globals.MaxStateStoragePerUser){
            ConnectionTable[conn.id].unshift();
        }

        conn.broadcast(JSON.stringify(message)); // broadcast to others
        conn.send(JSON.stringify(message));      // send it to me as well
    });
});

server.on("close", function(conn){
    conn.broadcast(JSON.stringify({ id: conn.id, action: "close"}));
});

server.listen(8000);
